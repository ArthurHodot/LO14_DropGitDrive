#!/bin/bash
#Manage and redirect conflict to the correct script

#Path to dependant script
root_path=""
dependantScriptManual=$root_path/bin/conflict/manual
dependantScriptAuto=$root_path/bin/conflict/auto

#Declare constants value of conflict
NON_EXISTANCE=1
TYPE=2
PERMISSION=3
CONTENUS=4
METADATA=5

#Parameters : $codeConflict $optionConfig $PATH_A $PATH_B [$PATHlog]
if [ $# -ne 3 ]
then
	echo "Usage : $0 codeConflict PATH_A PATH_B"
	exit 1
fi

if [ $1 -gt 5 -o $1 -lt 1 ]
then
	echo "Unknow codeconflict ! Please select a value between 1-5"
	exit 2
fi

codeConflict=$1
path_A=$2
path_B=$3

if [ -s /tmp/synchronizer_current_log ]
then
	pathLog=$((head -n1 /tmp/synchronizer_current_log))
else
	pathLog=""
fi

#Begin switch to determinate what conflict is with the codeconflict
case $codeConflict in	
	$NON_EXISTANCE)
		if [[ "$pathLog" == "" ]]
		then	       
			$dependantScriptManual/nonexistent_conflict_manager_manual $path_A $path_B
		else
			$dependantScriptAuto/nonexistent_conflict_manager_manual $path_A $path_B $pathLog
		fi;;
	$TYPE) 
		if [[ "$pathLog" == "" ]]
                then
			$dependantScriptManual/type_conflict_manager_manual $path_A $path_B
		else
			$dependantScriptAuto/type_conflict_manager_manual $path_A $path_B $pathLog
		fi;;
	$PERMISSION)
		if [[ "$pathLog" == "" ]]
                then
			$dependantScriptManual/perm_conflict_manager_manual $path_A $path_B
		else
			$dependantScriptAuto/perm_conflict_manager_manual $path_A $path_B $pathLog
		fi;;
	$CONTENUS)
		if [[ "$pathLog" == "" ]]
                then
			$dependantScriptManual/content_conflict_manager_manual $path_A $path_B
		else
			$dependantScriptAuto/content_conflict_manager_manual $path_A $path_B $pathLog
		fi;;
	$METADATA)
		if [[ "$pathLog" == "" ]]
                then
			$dependantScriptManual/metadata_conflict_manager_manual $path_A $path_B
		else
			$dependantScriptAuto/metadata_conflict_manager_manual $path_A $path_B $pathLog
		fi
esac

