#!/bin/bash
#Manage and redirect conflict to the correct script

#Path to dependant script
dependantScriptManual=manual
dependantScriptAuto=auto

#Declare constants value of conflict
NON_EXISTANCE=1
TYPE=2
PERMISSION=3
CONTENUS=4
METADATA=5

#Parameters : $codeConflict $optionConfig $PATH_A $PATH_B [$PATHlog]
if [ $# -gt 5 -o $# -lt 4 ]
then
	echo "Usage : $0 codeConflict optionConfig(manual[1]/auto[2]) PATH_A PATH_B [PATHlog]"
	exit 1
fi

if [ $1 -gt 5 -o $1 -lt 1 ]
then
	echo "Unknow codeconflict ! Please select a value between 1-5"
	exit 2
fi

if [ $2 -ne 0 ]
then
	if [ $2 -ne 1 ]
	then
		echo "Unknow value for optionConfig ! Select 'manual' or 'auto'"
		exit 3
	fi
fi

codeConflict=$1
optionConfig=$2
path_A=$3
path_B=$4

#Log attribution if exist
if [ $# -eq 5 ]
then
	pathLog=$5
fi

#Begin switch to determinate what conflict is with the codeconflict
case $codeConflict in	
	$NON_EXISTANCE)
		if [ $2 -eq 0 ]
		then	       
			bin/conflict/manual/nonexistent_conflict_manager_manual $path_A $path_B
		else
			echo auto pas fait
		fi;;
	$TYPE) 
		if [ $2 -eq 0 ]
                then
			bin/conflict/manual/type_conflict_manager_manual $path_A $path_B
		else
                       echo auto pas fait
		fi;;
	$PERMISSION)
		if [ $2 -eq 0 ]
                then
			$dependantScriptManual/perm_conflict_manager_manual $path_A $path_B
		else
                       echo auto pas fait
		fi;;
	$CONTENUS)
		if [ $2 -eq 0 ]
                then
			$dependantScriptManual/content_conflict_manager_manual $path_A $path_B
		else
                       echo auto pas fait
		fi;;
	$METADATA)
		if [ $2 -eq 0 ]
                then
			$dependantScriptManual/metadata_conflict_manager_manual $path_A $path_B
		else
			echo auto pas fait
		fi
esac

