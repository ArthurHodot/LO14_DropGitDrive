#!/bin/bash

#Script that take two PATH $1 and $2 and ask to the user which one they want to keep

#$1 need to be clear and mention the name of the file or directory at the end of the PATH
#$2 need to be the theorical equivalent PATH in the other branch with the name of the element at the end

#Exit code
INVALID_NUMBER_OF_ARGUMENTS=1
ELEMENT_TYPE_ERROR=2
root_path=""

if [ $# -ne 3 ]
then
        echo -e "Invalid number of arguments\n You need to use $0 treeA treeB log"
        exit $INVALID_NUMBER_OF_ARGUMENTS
fi


if [ -d $1 ]
then
        elementType1="d"
	elementType2="f"
else
        elementType1="f"
	elementType2="d"
fi

#Get the line corresponding to the conflicted file/dir
#First testing if the element is at the root of the tree
positionStartSub=$(echo $1 |cut -d "/" -f 1 | wc -m)
pathToGrep=$(echo ${1:$positionStartSub})
if [[ ! $1 =~ "/+" ]]
then
	lineLog=$(grep "$pathToGrep" $3 -m 1)
else
	lineLog=$(grep "$pathToGrep" $3)
fi

#Get the information
typeLog=$(echo $lineLog |cut -d " " -f 1)

if [[ "$elementType1" == "$typeLog" ]] && [[ "$elementType2" != "$typeLog" ]]
then
	rm -r $2
	${root_path}bin/element_duplicator $1 $2
elif [[ "$elementType2" == "$typeLog" ]] && [[ "$elementType1" != "$typeLog" ]]
then
	rm -r $1
	${root_path}bin/element_duplicator $2 $1
else
	#Asking user what to do
	echo "$1 ($elementType1) and $2 ($elementType2) dont have the same type"
	echo "Which one do you want to keep ? (the other one will be removed) (first/second)"
	read user_choice

	until [ $user_choice == "first" -o $user_choice == "second" ]
	do
        	echo "Incorrect answer. Which one do you want to keep ? (the other one will be removed) (first/second) "
        	read user_choice
	done

	#Executing user choice
	if [ $user_choice == "first" ]
	then
        	rm -r $2
		${root_path}bin/element_duplicator $1 $2
	else
        	rm -r $1
		${root_path}bin/element_duplicator $2 $1
	fi
fi

exit 0
